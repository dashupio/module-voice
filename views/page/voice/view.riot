<page-voice-view>
  <div class="flex-1 wrapper d-flex align-items-center">
    <div class="w-100">
      <div class="row justify-content-center">
        <div if={ voice } each={ (conn, i) in connections() } class={ `col-lg-${connections().length === 1 ? '10' : (connections().length === 2 ? '6' : '4')}` }>
          <div class={ `card mb-4 bg-secondary text-white` }>
            <div class="ratio ratio-16x9">
              <voice-video stream={ conn.stream } conn={ conn } />
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="card card-me bg-secondary">
      <div class="ratio ratio-16x9">
        <div if={ !voice || !voice.media } class="w-100 h-100 d-flex justify-content-center align-items-center">
          <i class="fa h1 fa-spinner fa-spin" />
        </div>
        <voice-video if={ voice && voice.media } mine={ true } stream={ voice.media } />
      </div>
    </div>
  </div>

  <script>
    // perfect
    import moment from 'moment';
    import dotProp from 'dot-prop';
    import PerfectScrollbar from 'perfect-scrollbar';

    // chat page task
    import Voice from '../../js/voice.ts';
    import VoiceVideo from './video';

    // export default
    export default class PageVoiceView {


      // ////////////////////////////////////////////////////////////////////////////
      //
      // RIOT METHODS
      //
      // ////////////////////////////////////////////////////////////////////////////

      /**
       * local components
       */
      static get components() {
        // return components
        return {
          VoiceVideo,
        };
      }

      /**
       * on before mount
       */
      onBeforeMount(...args) {
        // check frontend
        if (typeof window === 'undefined') return;

        // mixins
        Voice(this);

        // safe update
        this.safeUpdate = () => {
          this.update();
        };
      }

      /**
       * on before mount
       */
      onBeforeUnmount(...args) {
        // check frontend
        if (typeof window === 'undefined') return;

        // mixins
        if (this.voice) this.voice.destroy(this);
      }

      /**
       * connections
       */
      connections(type) {
        // return voice connections
        return this.voice.connections(type);
      }
    }
  </script>

  <style>
    .card {
      overflow : hidden;
    }
    .card.card-me {
      left     : 1rem;
      width    : 20vw;
      bottom   : 1rem;
      position : absolute;
    }
    .wrapper {
      position : relative;
    }
    video {
      width      : 100%;
      height     : 100%;
      object-fit : cover;
    }
  </style>
</page-voice-view>